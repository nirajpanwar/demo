name: WordPress Docker CI/CD Pipeline

# Trigger the workflow when pushing to the `main` branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Check out the code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx (for advanced build capabilities)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Use GitHub Secrets for credentials
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build the Docker images for WordPress and MySQL
      - name: Build the Docker images
        run: |
          docker build -t wpaws .

      # Step 5: Push the Docker images to Docker Hub
      - name: Push Docker images
        run: |
          docker tag wpaws npneeraj/wpaws:latest
          docker push npneeraj/wpaws:latest

  

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure deploy only runs after the build is successful

      


    steps:
      # Step 1: Check out the code again
      - name: Check out the code
        uses: actions/checkout@v2

      # Step 2: SSH into the production server and deploy the containers
      - name: Deploy to production server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd ./
            docker login -u="${{secrets.DOCKER_USERNAME}}" -p="${{secrets.DOCKER_PASSWORD}}"
            docker pull npneeraj/wpaws:latest
            docker run --name=wp-ubuntu --network=my-net -d -p 80:80 npneeraj/wpaws:latest
            docker run --name=mysql-box --network=my-net -v my-vol:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=root_password -e MYSQL_USER=wordpress_user -e MYSQL_PASSWORD=wordpress_password -e MYSQL_DATABASE=wordpress_db   -p 3306:3306  -d mysql:5.7
      
      - name: Deploy the app
        id: deploy
        run: |
          # Simulate deployment and capture the website URL
          echo "website_url=http://23.22.142.133" >> $GITHUB_ENV
          echo "::set-output name=website_url::http://23.22.142.133"
    
      - name: production
        run: |
          echo "The deployed website URL is: ${{ steps.deploy.outputs.website_url }}"

